= wresque_wrapper

A simple wrapper to allow inline queueing of arbitrary methods to Resque, e.g.:

  MyClass.delay.some_class_method

  my_instance.delay.some_instance_method

It shares the limitations of Resque with respect to queueable tasks; only methods whose arguments can be serialized as JSON objects can be queued.

== Usage

Any class derived from ActiveRecord::Base can use the delay method, optionally specifying a queue. Models can also specify a default queue using the #default_queue class method:

  # config/initializers/wresque_wrapper.rb
  WresqueWrapper.default_queue = :high # default in all models

  # app/models/my_model.rb
  class MyModel < ActiveRecord::Base
    self.default_queue = :big_jobs # change high to big_jobs
  end
  
  # app/models/other_model.rb
  class OtherModel < ActiveRecord::Base
     # default_queue: high
  end
  
== Queue priority

  delay(:queue => :xxx) > MyClass.default_queue > WresqueWrapper.default_queue

== Contributing to wresque_wrapper
 
* Check out the latest master to make sure the feature hasn't been implemented or the bug hasn't been fixed yet
* Check out the issue tracker to make sure someone already hasn't requested it and/or contributed it
* Fork the project
* Start a feature/bugfix branch
* Commit and push until you are happy with your contribution
* Make sure to add tests for it. This is important so I don't break it in a future version unintentionally.
* Please try not to mess with the Rakefile, version, or history. If you want to have your own version, or is otherwise necessary, that is fine, but please isolate to its own commit so I can cherry-pick around it.

== Copyright

Copyright (c) 2011 Tribesports Ltd. See LICENSE.txt for
further details.

